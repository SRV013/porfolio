---
const navItems = [
    {
        title: "Experiencia",
        label: "experiencia",
        url: "/#experiencia",
    },
    {
        title: "Proyectos",
        label: "proyectos",
        url: "/#proyectos",
    },
    {
        title: "Habilidades",
        label: "habilidades",
        url: "/#habilidades",
    },
    {
        title: "Sobre mí",
        label: "sobre-mi",
        url: "/#sobre-mi",
    }
];
---

<header
    class="fixed flex justify-end items-center p-4 w-full max-w-screen-lg z-10"
>
    <nav class="flex gap-3 px-3 py-2 rounded-3xl dark:bg-[#1e1b4b] bg-zinc-200">
        {
            navItems.map((link) => (
                <a
                    class="relative block transition hover:text-blue-500"
                    aria-label={link.label}
                    href={link.url}
                >
                    {link.title}
                </a>
            ))
        }
    </nav>
</header>

<script>
    document.addEventListener("astro:page-load", () => {
        const sections = document.querySelectorAll("section");
        const navItems = document.querySelectorAll("header nav a");
        const callback = (entries: any) => {
            let activeSection = null as any;
            entries.forEach((entry: any) => {
                if (entry.isIntersecting) {
                    activeSection = entry.target.id;
                }
            });
            if (activeSection) {
                navItems.forEach((item) => {
                    if (item.getAttribute("aria-label") === activeSection) {
                        item.classList.add("text-blue-500");
                    } else {
                        item.classList.remove("text-blue-500");
                    }
                });
            }
        };
        const observer = new IntersectionObserver(callback, {
            root: null,
            rootMargin: "0px 0px -20% 0px", // Ajusta según sea necesario
            threshold: 0.6, // Más restrictivo
        });

        sections.forEach((section) => {
            observer.observe(section);
        });

        document.onvisibilitychange = () => {
            if (document.visibilityState === "hidden") {
                observer.disconnect();
            } else {
                sections.forEach((section) => {
                    observer.observe(section);
                });
            }
        };
    });
</script>
